236 13장 비교함수
select * from tb_customer;
SELECT CUSTOMER_CD,CUSTOMER_NM, MW_FLG, DECODE(MW_FLG,'M','남성','W','여성') AS "성별" FROM TB_CUSTOMER;
SELECT * FROM TB_ETC_INFO;



SELECT CUSTOMER_CD,CUSTOMER_ENG_NM,ITEM_LIST,
    SUBSTR(DECODE(INSTR(ITEM_LIST,'S01'),0,'',',의류잡화')||
           DECODE(INSTR(ITEM_LIST,'S02'),0,'',',뷰티')||
           DECODE(INSTR(ITEM_LIST,'S03'),0,'',',레저자동차')||
           DECODE(INSTR(ITEM_LIST,'S04'),0,'',',식품')||
           DECODE(INSTR(ITEM_LIST,'S05'),0,'',',생활건강')||
           DECODE(INSTR(ITEM_LIST,'S06'),0,'',',가구인테리어')||
           DECODE(INSTR(ITEM_LIST,'S07'),0,'',',가전')||
           DECODE(INSTR(ITEM_LIST,'S08'),0,'',',도서취미')||
           DECODE(INSTR(ITEM_LIST,'S09'),0,'',',컴퓨터')||
           DECODE(INSTR(ITEM_LIST,'S010'),0,'',',브랜드'),2) AS "관심품목명"
FROM TB_ETC_INFO;
    
NVL()
SELECT * FROM TB_CUSTOMER;
SELECT CUSTOMER_NM,NVL(PHONE_NUMBER,'000-0000-0000')AS "PHONE_NUMBER" FROM TB_CUSTOMER;

LEAST() 최소값
SELECT LEAST(13,5,-3,0,7,-10,200) AS LEAST_NM FROM DUAL;

GREATEST() 최대값
SELECT GREATEST(13,5,-3,0,7,-10,200) AS LEAST_NM FROM DUAL;

WIDTH_BUCKET() :특정 값의 구간 위치 구하기

1~50까지의 범위를 5개의 구간으로 나눈 뒤 25는 몇번째 구간에 있을까?
SELECT WIDTH_BUCKET(25,1,50,5) FROM DUAL;

14장 형 변환 함수
TO_CHAR() : 문자형으로 변환하는 함수
SELECT TO_CHAR(TO_DATE('20240924'),'YY-MM-DD'),
    TO_CHAR(56123,'999,999') FROM DUAL;

SELECT TO_DATE('20240924'),TO_CHAR(56123) FROM DUAL;
SELECT 09.24 ||'%', TO_CHAR(09.24)||'%',CONCAT(09.24,'%')FROM DUAL;

TO_DATE(): 날짜형으로 변환
SELECT TO_CHAR(1234+4) FROM DUAL;
SELECT TO_CHAR(TO_DATE('20240924')+4,'YY-MM-DD') FROM DUAL;
SELECT TO_CHAR(TO_DATE('20240925')+30,'YYYY-MM-DD') AS "30일전", '20240925' , 
       TO_CHAR(TO_DATE('20240925')+60,'YYYY-MM-DD') AS "60일후" FROM DUAL;

TO_NUMBER() 숫자로 변환
SELECT '1234'+1,TO_NUMBER('1234')+1 FROM DUAL;

TO_CHR() : 코드값을 아스키 문자로 변환
SELECT CHR(65) FROM DUAL;

TO_ASCII() : 문자를 코드값으로 변환
SELECT ASCII('D') FROM DUAL;

15장 그룹함수
SELECT * FROM TB_GRADE;
SELECT CLASS_CD, MAX(KOR) FROM TB_GRADE GROUP BY CLASS_CD;

SELECT CLASS_CD, MIN(KOR) FROM TB_GRADE GROUP BY CLASS_CD ORDER BY CLASS_CD;

SELECT CLASS_CD, STUDENT_NO, STUDENT_NM,KOR,ENG, MAT, 
    MIN(KOR) OVER (PARTITION BY CLASS_CD) AS "최소값(국어)",
    KOR-MIN(KOR) OVER (PARTITION BY CLASS_CD) "최소값 차이(국어)" FROM TB_GRADE
    ORDER BY CLASS_CD;
    
SELECT CLASS_CD, ROUND(AVG(KOR),2) AS "국어평균"
    FROM TB_GRADE GROUP BY CLASS_CD ORDER BY CLASS_CD;
    
SELECT CUSTOMER_CD, COUNT(SEQ_NO) AS 적립수
    FROM TB_POINT GROUP BY CUSTOMER_CD ORDER BY CUSTOMER_CD;
    
SELECT CUSTOMER_CD, SUM(POINT) 
    FROM TB_POINT GROUP BY CUSTOMER_CD ORDER BY CUSTOMER_CD;
    
SELECT NVL(CUSTOMER_CD,'총합'), SUM(POINT) 
    FROM TB_POINT GROUP BY ROLLUP(CUSTOMER_CD) ORDER BY CUSTOMER_CD;
  
SELECT * FROM TB_SALES;

//265P
SELECT NVL(SALES_DT,'총합'),
   CASE WHEN SALES_DT IS NOT NULL AND PRODUCT_NM IS NULL THEN '소계'
   ELSE PRODUCT_NM
   END AS PRODUCT_NM, SUM(PRICE*SALES_COUNT) AS 매출금액 
   FROM TB_SALES GROUP BY ROLLUP(SALES_DT, PRODUCT_NM) ORDER BY SALES_DT;
    
267P ROW_NUMBER()
SELECT TEST_CD, KOR, ROW_NUMBER() OVER (ORDER BY KOR DESC) AS 순위 
   FROM TB_GRADE_07 ORDER BY KOR DESC;

SELECT TEST_CD, KOR, RANK() OVER (ORDER BY KOR DESC) AS 순위
   FROM TB_GRADE_07 ORDER BY KOR DESC;
   


   
